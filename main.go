package main

import (
	"github.com/theradius/gotest/interpolate"
	"github.com/theradius/gotest/hi"
	"fmt"
)

func main() {
	expiries := []float64{2458578.83333333, 2458578.83333333, 2458578.83333333,
		2458578.83333333, 2458578.83333333, 2458578.83333333,
		2458578.83333333, 2458578.83333333, 2458578.83333333,
		2458578.83333333, 2458578.83333333, 2458578.83333333,
		2458578.83333333, 2458585.83333333, 2458585.83333333,
		2458585.83333333, 2458585.83333333, 2458585.83333333,
		2458585.83333333, 2458585.83333333, 2458585.83333333,
		2458585.83333333, 2458585.83333333, 2458585.83333333,
		2458585.83333333, 2458585.83333333, 2458585.83333333,
		2458599.83333333, 2458599.83333333, 2458599.83333333,
		2458599.83333333, 2458599.83333333, 2458599.83333333,
		2458599.83333333, 2458599.83333333, 2458599.83333333,
		2458599.83333333, 2458599.83333333, 2458599.83333333,
		2458599.83333333, 2458599.83333333, 2458599.83333333,
		2458662.83333333, 2458662.83333333, 2458662.83333333,
		2458662.83333333, 2458662.83333333, 2458662.83333333,
		2458662.83333333, 2458662.83333333, 2458662.83333333,
		2458662.83333333, 2458662.83333333, 2458662.83333333,
		2458662.83333333, 2458662.83333333, 2458662.83333333,
		2458662.83333333, 2458662.83333333, 2458662.83333333,
		2458662.83333333, 2458662.83333333, 2458753.83333333,
		2458753.83333333, 2458753.83333333, 2458753.83333333,
		2458753.83333333, 2458753.83333333, 2458753.83333333,
		2458753.83333333, 2458753.83333333, 2458753.83333333,
		2458753.83333333, 2458753.83333333, 2458753.83333333,
		2458753.83333333, 2458753.83333333, 2458753.83333333,
		2458844.83333333, 2458844.83333333, 2458844.83333333,
		2458844.83333333, 2458844.83333333, 2458844.83333333,
		2458844.83333333, 2458844.83333333, 2458844.83333333,
		2458844.83333333, 2458844.83333333, 2458844.83333333,
		2458844.83333333, 2458844.83333333, 2458844.83333333}
	deltas := []float64{2.1870e-02, 3.6660e-02, 6.6790e-02, 1.3624e-01, 2.5592e-01,
		4.4276e-01, 6.6460e-01, 8.4275e-01, 9.3007e-01, 9.7049e-01,
		9.7858e-01, 9.8613e-01, 9.8821e-01, 3.7750e-02, 5.7490e-02,
		8.8940e-02, 1.3601e-01, 2.1361e-01, 3.3055e-01, 4.7024e-01,
		6.2091e-01, 7.5722e-01, 8.6388e-01, 9.3150e-01, 9.6782e-01,
		9.7514e-01, 9.7862e-01, 2.6830e-02, 4.5080e-02, 6.6200e-02,
		1.2140e-01, 2.2689e-01, 3.9186e-01, 5.9620e-01, 7.8176e-01,
		9.0009e-01, 9.5523e-01, 9.8037e-01, 9.8829e-01, 9.9101e-01,
		9.9523e-01, 9.9812e-01, 1.9000e-04, 2.0500e-03, 3.4000e-03,
		5.6800e-03, 8.1900e-03, 9.7500e-03, 1.6320e-02, 2.1130e-02,
		3.0440e-02, 5.5320e-02, 1.0804e-01, 1.7682e-01, 2.7858e-01,
		3.9900e-01, 5.8060e-01, 7.6236e-01, 8.8945e-01, 9.5796e-01,
		9.8607e-01, 9.9653e-01, 3.3010e-02, 4.3860e-02, 6.4330e-02,
		6.4720e-02, 8.9650e-02, 1.3651e-01, 2.1741e-01, 2.7703e-01,
		3.6571e-01, 4.7261e-01, 5.9405e-01, 7.1707e-01, 8.2910e-01,
		9.1354e-01, 9.6343e-01, 9.8600e-01, 1.0317e-01, 1.1929e-01,
		1.6780e-01, 2.3625e-01, 2.8003e-01, 3.1804e-01, 3.7426e-01,
		4.2558e-01, 5.1171e-01, 6.0838e-01, 7.1052e-01, 8.0741e-01,
		8.8767e-01, 9.4712e-01, 9.8119e-01}
	iv := []float64{0.55166313, 0.52502992, 0.49795901, 0.47745801, 0.47807125,
		0.47657771, 0.50762459, 0.56728529, 0.67922468, 0.80960497,
		0.96739806, 1.12500606, 1.28242952, 0.5149619, 0.50113043,
		0.48331432, 0.45807387, 0.45707247, 0.46288621, 0.46805044,
		0.48237011, 0.50979202, 0.54782849, 0.60469615, 0.68616489,
		0.79745811, 0.90848383, 0.56057241, 0.53837729, 0.49246045,
		0.46913651, 0.47235756, 0.46399358, 0.4737927, 0.50948832,
		0.59134716, 0.68237178, 0.816129, 0.98079658, 1.15810145,
		1.35562502, 1.56479911, 0.85299274, 0.8535621, 0.8537351,
		0.85393351, 0.83428768, 0.77776906, 0.77629787, 0.72218684,
		0.66622042, 0.62292051, 0.56085577, 0.54512676, 0.53774785,
		0.5237417, 0.52877521, 0.55159378, 0.61859325, 0.74575812,
		0.95552009, 1.28761528, 0.73231763, 0.71292563, 0.71347301,
		0.64554132, 0.61817667, 0.59552268, 0.56878702, 0.56260633,
		0.55936377, 0.55925097, 0.56452145, 0.58519721, 0.62106966,
		0.69598179, 0.82848802, 1.07472409, 0.6773541, 0.63912332,
		0.64032677, 0.64220886, 0.64325225, 0.59092013, 0.58348471,
		0.57534105, 0.57316902, 0.5773407, 0.5929755, 0.62243019,
		0.68363017, 0.78477086, 0.98860691}
	f := interpolate.Interp2d(expiries, deltas, iv)

	//start := time.Now()
	//for i := 0; i < 50000; i++ {
	//	f(2458587.6666666665, 0.5)
	//}
	//elapsed := time.Since(start)
	//fmt.Println("Code took %s", elapsed)

	fmt.Printf("%f\n", f(2458585.8333333335, 0.13601))

	//dataPoints := make([]*delaunay.Point, 93)
	//for i := 0; i < 93; i++ {
	//	dataPoints[i] = interpolation.NewPoint(expiries[i], deltas[i], iv[i])
	//}
	//// Create an interpolator that will use the source data.
	//interpolator, _ := interpolation.New(dataPoints)
	//// Interpolate at the point (0.5, 0.5)
	//result, _ := interpolator.Interpolate(2458587.6666666665, 0.1)
	//
	//fmt.Printf("%f\n", result)
}
